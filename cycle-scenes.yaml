blueprint:
  name: Cycle through scenes on state change
  description: >
    When any selected entity changes state, this blueprint cycles through a list of scenes.
    It does not use any helpers â€” the cycling state is tracked in memory using a variable.
  domain: automation
  input:
    trigger_entities:
      name: Trigger entities
      description: Entities whose state changes should trigger the cycle.
      selector:
        entity: {}
      default: []
    scenes:
      name: Scenes
      description: List of scenes to cycle through.
      selector:
        target:
          entity:
            domain: scene
    cycle_script:
      name: (Optional) Custom script name
      description: Internal variable name for script instance (only needed if using multiple)
      default: cycle_script

mode: restart
variables:
  scene_list: !input scenes
  scene_index: "{{ (state_attr(cycle_script, 'current_index') or 0) | int }}"
  total_scenes: "{{ scene_list.entity_id | count }}"
  next_index: "{{ (scene_index + 1) % total_scenes }}"
  next_scene: "{{ scene_list.entity_id[next_index] }}"
  cycle_script: !input cycle_script

trigger:
  - platform: state
    entity_id: !input trigger_entities

action:
  - service: scene.turn_on
    data:
      entity_id: "{{ next_scene }}"

  - service: script.turn_on
    data:
      entity_id: "script.{{ cycle_script }}"
      variables:
        current_index: "{{ next_index }}"
